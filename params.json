{"name":"Sub","tagline":"A fast CLI for downloading subtitles via Subscene","body":"# Sub - The CLI-Subscene\r\n\r\n[![Build Status](https://travis-ci.org/MartinIngesen/Sub.svg?branch=master)](https://travis-ci.org/MartinIngesen/Sub)\r\n\r\n## What is Sub?\r\nSub is a CLI-command for downloading subtitles automagically from Subscene.com.\r\n\r\n## How do I use it?\r\n\r\nThe base command works like this ```sub <video-file-name> [--pick]```.\r\n\r\nThe ```--pick``` flag allows you to get a list of the 5 top results, and pick which one to download.\r\nConvenient when the command downloads the wrong file automatically.\r\n\r\nYou can run Sub using ```java -jar /path/to/sub_jar/sub-1.1.jar <video-file-name>``` in the directory where the file is present.\r\n\r\nOr, to simplify things: add this to your zsh config: ```alias sub=\"java -jar /path/to/sub_jar/sub-1.1.jar \"```\r\n\r\nYou may or may not need to add ```setopt completealiases``` to your .zshrc-file for autocompletion (tab) to work.\r\n\r\nNavigate to your video via terminal, and run ```sub <video-file-name>```\r\n\r\n## How does it work?\r\nSub uses Jsoup to parse Subscene's HTML. It automatically downloads the first result from Subscene (unless the ```-pick``` flag is set)\r\nand unzips it to the directory you're in.\r\n\r\nThe script defaults to english subtitles.\r\n\r\n## How do I build it?\r\nThe project uses Maven, and you can build it using ```mvn package```.\r\n\r\n## Todo\r\n* Add automatic search in directory for videofile.\r\n* Add the possibility to supply a path to the sub-command.\r\n* Commands for bash?\r\n* Better error-handling\r\n* Change languages\r\n* Better automated recognition and result-filterning based on common identifiers in titles, such as \"S01E12\" or \"112\".\r\n","google":"UA-57017443-1","note":"Don't delete this file! It's used internally to help with page regeneration."}